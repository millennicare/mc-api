"""create tables

Revision ID: 5fe51f3dd69f
Revises:
Create Date: 2025-10-08 11:48:30.843645

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "5fe51f3dd69f"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "role",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_role_name"), "role", ["name"], unique=False)
    op.create_table(
        "specialty",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column(
            "category",
            sa.Enum(
                "CHILD_CARE",
                "SENIOR_CARE",
                "PET_CARE",
                "HOUSEKEEPING",
                "TUTORING",
                "OTHER",
                name="specialtycategoryenum",
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_specialty_category"), "specialty", ["category"], unique=False
    )
    op.create_table(
        "user",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("email_verified", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_name"), "user", ["name"], unique=True)
    op.create_table(
        "waitlist",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("contacted", sa.Boolean(), nullable=False),
        sa.Column("referral_code", sa.String(), nullable=False),
        sa.Column("notified_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_waitlist_email"), "waitlist", ["email"], unique=True)
    op.create_table(
        "account",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("account_id", sa.String(), nullable=False),
        sa.Column("provider_id", sa.String(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("access_token", sa.String(), nullable=True),
        sa.Column("refresh_token", sa.String(), nullable=True),
        sa.Column("id_token", sa.String(), nullable=True),
        sa.Column("access_token_expires_at", sa.Integer(), nullable=True),
        sa.Column("refresh_token_expires_at", sa.Integer(), nullable=True),
        sa.Column("scope", sa.String(), nullable=True),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_account_user_id"), "account", ["user_id"], unique=False)
    op.create_table(
        "caregiver_information",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("background_check_completed", sa.Boolean(), nullable=False),
        sa.Column("onboarding_completed", sa.Boolean(), nullable=False),
        sa.Column("profile_picture", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "careseeker_information",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("onboarding_completed", sa.Boolean(), nullable=False),
        sa.Column("profile_picture", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "contact",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("message", sa.String(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "IN_PROGRESS", "RESOLVED", "CLOSED", name="contactstatusenum"
            ),
            nullable=False,
        ),
        sa.Column(
            "priority",
            sa.Enum("LOW", "MEDIUM", "HIGH", "URGENT", name="contactpriorityenum"),
            nullable=False,
        ),
        sa.Column("submitted_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_contact_email"), "contact", ["email"], unique=False)
    op.create_table(
        "location",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("line1", sa.String(), nullable=False),
        sa.Column("line2", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "session",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "role",
            sa.Enum("CARESEEKER", "CAREGIVER", "ADMIN", name="sessionroleenum"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_session_user_id"), "session", ["user_id"], unique=False)
    op.create_table(
        "user_information",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("phone_number", sa.String(), nullable=False),
        sa.Column("birthdate", sa.DateTime(), nullable=False),
        sa.Column(
            "gender",
            sa.Enum(
                "MALE", "FEMALE", "OTHER", "PREFER_NOT_TO_SAY", name="usergenderenum"
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_information_user_id"),
        "user_information",
        ["user_id"],
        unique=True,
    )
    op.create_table(
        "user_to_role",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "role_id"),
    )
    op.create_table(
        "verification_code",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "identifier",
            sa.Enum("FORGOT_PASSWORD", "VERIFY_EMAIL", name="verificationcodeenum"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_verification_code_user_id"),
        "verification_code",
        ["user_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_verification_code_value"), "verification_code", ["value"], unique=False
    )
    op.create_table(
        "appointment",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("start_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "CONFIRMED",
                "COMPLETED",
                "CANCELLED",
                name="appointmentstatusenum",
            ),
            nullable=False,
        ),
        sa.Column("careseeker_id", sa.UUID(), nullable=False),
        sa.Column("caregiver_id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["caregiver_id"],
            ["caregiver_information.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["careseeker_id"],
            ["careseeker_information.user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_appointment_caregiver_id"),
        "appointment",
        ["caregiver_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_appointment_careseeker_id"),
        "appointment",
        ["careseeker_id"],
        unique=False,
    )
    op.create_table(
        "caregiver_availability",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("caregiver_id", sa.UUID(), nullable=False),
        sa.Column("start_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["caregiver_id"],
            ["caregiver_information.user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "caregiver_to_specialty",
        sa.Column("caregiver_information_id", sa.UUID(), nullable=False),
        sa.Column("specialty_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["caregiver_information_id"],
            ["caregiver_information.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["specialty_id"],
            ["specialty.id"],
        ),
        sa.PrimaryKeyConstraint("caregiver_information_id", "specialty_id"),
    )
    op.create_table(
        "careseeker_to_specialty",
        sa.Column("careseeker_information_id", sa.UUID(), nullable=False),
        sa.Column("specialty_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["careseeker_information_id"],
            ["careseeker_information.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["specialty_id"],
            ["specialty.id"],
        ),
        sa.PrimaryKeyConstraint("careseeker_information_id", "specialty_id"),
    )
    op.create_table(
        "dependent",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("PET", "CHILD", "SENIOR", name="dependenttypeenum"),
            nullable=False,
        ),
        sa.Column("age", sa.Integer(), nullable=False),
        sa.Column("careseeker_id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["careseeker_id"],
            ["careseeker_information.user_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_dependent_careseeker_id"), "dependent", ["careseeker_id"], unique=False
    )
    op.create_table(
        "service",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column(
            "category",
            sa.Enum(
                "CHILD_CARE",
                "SENIOR_CARE",
                "PET_CARE",
                "HOUSEKEEPING",
                "TUTORING",
                "OTHER",
                name="servicecategoryenum",
            ),
            nullable=False,
        ),
        sa.Column(
            "pricing_type",
            sa.Enum("HOURLY", "FIXED", "PER_JOB", name="servicepricingtypeenum"),
            nullable=False,
        ),
        sa.Column("caregiver_id", sa.UUID(), nullable=False),
        sa.Column("specialty_id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["caregiver_id"],
            ["caregiver_information.user_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["specialty_id"], ["specialty.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_service_caregiver_id"), "service", ["caregiver_id"], unique=False
    )
    op.create_index(
        op.f("ix_service_specialty_id"), "service", ["specialty_id"], unique=False
    )
    op.create_table(
        "child_dependent",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("dependent_id", sa.UUID(), nullable=False),
        sa.Column(
            "gender", sa.Enum("MALE", "FEMALE", name="childgenderenum"), nullable=True
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["dependent_id"], ["dependent.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_child_dependent_dependent_id"),
        "child_dependent",
        ["dependent_id"],
        unique=False,
    )
    op.create_table(
        "pet_dependent",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("dependent_id", sa.UUID(), nullable=False),
        sa.Column(
            "species",
            sa.Enum(
                "CAT",
                "DOG",
                "BIRD",
                "FISH",
                "REPTILE",
                "OTHER",
                name="petdependentspeciesenum",
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["dependent_id"], ["dependent.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_pet_dependent_dependent_id"),
        "pet_dependent",
        ["dependent_id"],
        unique=False,
    )
    op.create_table(
        "senior_dependent",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("dependent_id", sa.UUID(), nullable=False),
        sa.Column(
            "gender",
            sa.Enum(
                "MALE",
                "FEMALE",
                "OTHER",
                "PREFER_NOT_TO_SAY",
                name="seniordependentgenderenum",
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["dependent_id"], ["dependent.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_senior_dependent_dependent_id"),
        "senior_dependent",
        ["dependent_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_senior_dependent_dependent_id"), table_name="senior_dependent"
    )
    op.drop_table("senior_dependent")
    op.drop_index(op.f("ix_pet_dependent_dependent_id"), table_name="pet_dependent")
    op.drop_table("pet_dependent")
    op.drop_index(op.f("ix_child_dependent_dependent_id"), table_name="child_dependent")
    op.drop_table("child_dependent")
    op.drop_index(op.f("ix_service_specialty_id"), table_name="service")
    op.drop_index(op.f("ix_service_caregiver_id"), table_name="service")
    op.drop_table("service")
    op.drop_index(op.f("ix_dependent_careseeker_id"), table_name="dependent")
    op.drop_table("dependent")
    op.drop_table("careseeker_to_specialty")
    op.drop_table("caregiver_to_specialty")
    op.drop_table("caregiver_availability")
    op.drop_index(op.f("ix_appointment_careseeker_id"), table_name="appointment")
    op.drop_index(op.f("ix_appointment_caregiver_id"), table_name="appointment")
    op.drop_table("appointment")
    op.drop_index(op.f("ix_verification_code_value"), table_name="verification_code")
    op.drop_index(op.f("ix_verification_code_user_id"), table_name="verification_code")
    op.drop_table("verification_code")
    op.drop_table("user_to_role")
    op.drop_index(op.f("ix_user_information_user_id"), table_name="user_information")
    op.drop_table("user_information")
    op.drop_index(op.f("ix_session_user_id"), table_name="session")
    op.drop_table("session")
    op.drop_table("location")
    op.drop_index(op.f("ix_contact_email"), table_name="contact")
    op.drop_table("contact")
    op.drop_table("careseeker_information")
    op.drop_table("caregiver_information")
    op.drop_index(op.f("ix_account_user_id"), table_name="account")
    op.drop_table("account")
    op.drop_index(op.f("ix_waitlist_email"), table_name="waitlist")
    op.drop_table("waitlist")
    op.drop_index(op.f("ix_user_name"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_specialty_category"), table_name="specialty")
    op.drop_table("specialty")
    op.drop_index(op.f("ix_role_name"), table_name="role")
    op.drop_table("role")
    # ### end Alembic commands ###
